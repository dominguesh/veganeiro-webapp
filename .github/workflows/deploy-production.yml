name: Deploy to Production (Earth) 🌍

on:
  push:
    branches:
      - earth  # production branch
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          if [ -z "${{ secrets.PRODUCTION_SSH_KEY }}" ]; then
            echo "Error: PRODUCTION_SSH_KEY secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.PRODUCTION_HOST }}" ]; then
            echo "Error: PRODUCTION_HOST secret is not set"
            exit 1
          fi
          mkdir -p ~/.ssh
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H "${{ secrets.PRODUCTION_HOST }}" 2>/dev/null > ~/.ssh/known_hosts || {
            echo "Error: Failed to scan host key for ${{ secrets.PRODUCTION_HOST }}"
            exit 1
          }
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy to Production
        env:
          SSH_HOST: ${{ secrets.PRODUCTION_HOST }}
          SSH_USER: ${{ secrets.PRODUCTION_USERNAME }}
        run: |
          # Copy env file
          scp -i ~/.ssh/deploy_key .env.production ${SSH_USER}@${SSH_HOST}:/var/www/veganeiro/.env
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=accept-new ${SSH_USER}@${SSH_HOST} '
            cd /var/www/veganeiro
            git pull origin earth
            docker compose pull
            docker compose --env-file .env down
            docker compose --env-file .env up -d --build
            docker system prune -f --volumes
            rm -f .env
          '

      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/deploy_key
