name: Deploy

on:
  push:
    branches: 
      - main
      - staging
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Dependencies
      run: |
        cd frontend
        npm install
        cd ../backend
        npm install
        
    - name: Build Frontend
      run: |
        cd frontend
        npm run build
        
    - name: Build Backend
      run: |
        cd backend
        npm run build
        
    - name: Deploy to Staging
      if: github.ref == 'refs/heads/staging' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
      env:
        SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
        HOST: ${{ secrets.STAGING_HOST }}
        USERNAME: ${{ secrets.STAGING_USERNAME }}
      run: |
        echo "$SSH_KEY" > deploy_key
        chmod 600 deploy_key
        
        # Create the .ssh directory and add known_hosts
        mkdir -p ~/.ssh
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
        
        # Copy frontend build
        scp -i deploy_key -r frontend/.next/* $USERNAME@$HOST:/var/www/html/frontend/
        
        # Copy backend build
        scp -i deploy_key -r backend/dist/* $USERNAME@$HOST:/var/www/html/backend/
        
        # Clean up
        rm -f deploy_key

    - name: Deploy to Production
      if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
      env:
        SSH_KEY: ${{ secrets.PRODUCTION_SSH_KEY }}
        HOST: ${{ secrets.PRODUCTION_HOST }}
        USERNAME: ${{ secrets.PRODUCTION_USERNAME }}
      run: |
        echo "$SSH_KEY" > deploy_key
        chmod 600 deploy_key
        
        # Create the .ssh directory and add known_hosts
        mkdir -p ~/.ssh
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
        
        # Copy frontend build
        scp -i deploy_key -r frontend/.next/* $USERNAME@$HOST:/var/www/html/frontend/
        
        # Copy backend build
        scp -i deploy_key -r backend/dist/* $USERNAME@$HOST:/var/www/html/backend/
        
        # Clean up
        rm -f deploy_key
