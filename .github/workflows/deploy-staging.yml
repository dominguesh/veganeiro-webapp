name: Deploy to Staging (Moon) ðŸŒ•

on:
  push:
    branches:
      - moon  # staging branch
  pull_request:
    branches:
      - earth  # production branch
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Build application
        run: yarn build
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H "${{ secrets.STAGING_HOST }}" > ~/.ssh/known_hosts

      - name: Deploy to Staging
        env:
          HOST: "${{ secrets.STAGING_HOST }}"
          USERNAME: "${{ secrets.STAGING_USERNAME }}"
        run: |
          # Create deployment script
          echo '#!/bin/bash
          cd /var/www/veganeiro-staging
          git pull origin moon
          docker-compose -f docker-compose.yml down
          docker-compose -f docker-compose.yml up -d --build
          docker system prune -f' > deploy.sh
          
          # Copy deployment script and execute
          scp -i ~/.ssh/deploy_key deploy.sh "${{ secrets.STAGING_USERNAME }}@${{ secrets.STAGING_HOST }}:~/deploy.sh"
          ssh -i ~/.ssh/deploy_key "${{ secrets.STAGING_USERNAME }}@${{ secrets.STAGING_HOST }}" "chmod +x ~/deploy.sh && ~/deploy.sh"

      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/deploy_key

      - name: Notify on failure
        if: failure()
        run: |
          echo "Deployment to staging failed!"